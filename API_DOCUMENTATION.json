{
  "openapi": "3.0.0",
  "info": {
    "title": "Car Project API",
    "description": "API documentation for the Car Project - All transaction endpoints",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                },
                "required": ["name", "email", "password", "password_confirmation"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "example": "1234567890abcdef"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "example": "1234567890abcdef"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Logged out successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get authenticated user",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forgot-password": {
      "post": {
        "summary": "Request password reset",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset link sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset link sent to your email"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "summary": "Reset password",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "token": {
                    "type": "string",
                    "example": "reset_token"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "newpassword123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "format": "password",
                    "example": "newpassword123"
                  }
                },
                "required": ["email", "token", "password", "password_confirmation"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": ["Profile"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": ["Profile"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johnsmith@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profile/change-password": {
      "post": {
        "summary": "Change user password",
        "tags": ["Profile"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "newpassword123"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "format": "password",
                    "example": "newpassword123"
                  }
                },
                "required": ["current_password", "password", "password_confirmation"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password changed successfully"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/stats": {
      "get": {
        "summary": "Get dashboard statistics",
        "tags": ["Profile"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "bargains_count": {
                          "type": "integer",
                          "example": 5
                        },
                        "cars_count": {
                          "type": "integer",
                          "example": 10
                        },
                        "active_auctions_count": {
                          "type": "integer",
                          "example": 3
                        },
                        "unread_notifications_count": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bargains": {
      "get": {
        "summary": "List all bargains",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by registration status"
          }
        ],
        "responses": {
          "200": {
            "description": "Bargains retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Bargain"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new bargain",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BargainInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bargain created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bargain created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bargain"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/bargains/{id}": {
      "get": {
        "summary": "Get a specific bargain",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bargain retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bargain"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bargain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific bargain",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BargainInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bargain updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bargain updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bargain"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bargain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific bargain",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bargain deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bargain deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bargain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bargains/{id}/toggle-status": {
      "post": {
        "summary": "Toggle bargain status",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Status toggled successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bargain"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bargain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bargains/{id}/update-status": {
      "post": {
        "summary": "Update bargain registration status",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "approved", "blocked", "restricted"],
                    "example": "approved"
                  },
                  "description": {
                    "type": "string",
                    "example": "Account approved by admin"
                  },
                  "restriction_days": {
                    "type": "integer",
                    "example": 7
                  },
                  "reset_restrictions": {
                    "type": "boolean",
                    "example": false
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User status updated to Approved successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bargain"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bargain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/bargains/{id}/send-warning": {
      "post": {
        "summary": "Send warning to bargain user",
        "tags": ["Bargains"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warning_message": {
                    "type": "string",
                    "example": "Please update your store information"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warning sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Warning sent to John's Store with custom message."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Bargain"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Bargain not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "summary": "List all cars",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by car type"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by car status"
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Cars retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Car"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new car",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Car created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Car created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "get": {
        "summary": "Get a specific car",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific car",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Car updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Car updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific car",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Car deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}/toggle-promoted": {
      "post": {
        "summary": "Toggle car promotion status",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car promotion toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Car promoted successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Car"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cars/{id}/offers": {
      "get": {
        "summary": "Get offers for a specific car",
        "tags": ["Cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car offers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "car": {
                          "$ref": "#/components/schemas/Car"
                        },
                        "offers": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Offer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/offers": {
      "get": {
        "summary": "List all offers",
        "tags": ["Offers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "car_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by car ID"
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Offers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Offer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new offer",
        "tags": ["Offers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mao_name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "mao_phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "mao_email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "mao_price": {
                    "type": "number",
                    "example": 25000
                  },
                  "mao_car_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "mao_comments": {
                    "type": "string",
                    "example": "Interested in this car"
                  }
                },
                "required": ["mao_name", "mao_phone", "mao_email", "mao_price", "mao_car_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Offer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Offer submitted successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Offer"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/offers/{id}": {
      "get": {
        "summary": "Get a specific offer",
        "tags": ["Offers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Offer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Offer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific offer",
        "tags": ["Offers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Smith"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "price": {
                    "type": "number",
                    "example": 25000
                  },
                  "remark": {
                    "type": "string",
                    "example": "Updated comment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Offer updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Offer updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Offer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Offer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific offer",
        "tags": ["Offers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offer deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Offer deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Offer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auctions": {
      "get": {
        "summary": "List all auctions",
        "tags": ["Auctions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "car_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by car ID"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by auction status"
          },
          {
            "name": "auction_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by auction type"
          }
        ],
        "responses": {
          "200": {
            "description": "Auctions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Auction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new auction",
        "tags": ["Auctions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "car_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "starting_price": {
                    "type": "number",
                    "example": 20000
                  },
                  "auction_type": {
                    "type": "string",
                    "enum": ["fixed", "timed"],
                    "example": "fixed"
                  },
                  "duration_days": {
                    "type": "integer",
                    "example": 7
                  },
                  "end_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-12-31T23:59:59Z"
                  },
                  "message": {
                    "type": "string",
                    "example": "Special auction for this car"
                  }
                },
                "required": ["car_id", "starting_price", "auction_type"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Auction created successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Auction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Business logic error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auctions/{id}": {
      "get": {
        "summary": "Get a specific auction",
        "tags": ["Auctions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Auction"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Auction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific auction",
        "tags": ["Auctions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "starting_price": {
                    "type": "number",
                    "example": 22000
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated auction message"
                  },
                  "end_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-12-31T23:59:59Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Auction updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Auction updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Auction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Business logic error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Auction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific auction",
        "tags": ["Auctions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auction deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Auction deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Business logic error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Auction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auctions/{id}/end": {
      "post": {
        "summary": "End an auction early",
        "tags": ["Auctions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auction ended successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Auction ended successfully."
                    },
                    "data": {
                      "$ref": "#/components/schemas/Auction"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Business logic error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Auction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/promotions": {
      "get": {
        "summary": "List all promotions",
        "tags": ["Promotions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "promotable_type",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by promotable type"
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active promotions"
          }
        ],
        "responses": {
          "200": {
            "description": "Promotions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Promotion"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new promotion",
        "tags": ["Promotions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "promotable_type": {
                    "type": "string",
                    "example": "App\\Models\\Car"
                  },
                  "promotable_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-31T23:59:59Z"
                  }
                },
                "required": ["promotable_type", "promotable_id", "ends_at"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promotion created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Promotion created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Promotion"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/promotions/{id}": {
      "get": {
        "summary": "Get a specific promotion",
        "tags": ["Promotions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Promotion"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Promotion not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a specific promotion",
        "tags": ["Promotions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "starts_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-01T00:00:00Z"
                  },
                  "ends_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-10-31T23:59:59Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promotion updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Promotion updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Promotion"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Promotion not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a specific promotion",
        "tags": ["Promotions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Promotion deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Promotion not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "email_verified_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          }
        }
      },
      "Bargain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John's Bargain Store"
          },
          "username": {
            "type": "string",
            "example": "johnsstore"
          },
          "website": {
            "type": "string",
            "example": "https://johnsstore.com"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "contact@johnsstore.com"
          },
          "registration_number": {
            "type": "string",
            "example": "REG123456"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "whatsapp": {
            "type": "string",
            "example": "+1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City, Country"
          },
          "status": {
            "type": "string",
            "example": "active"
          },
          "contract_start_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01"
          },
          "contract_end_date": {
            "type": "string",
            "format": "date",
            "example": "2026-01-01"
          },
          "registration_status": {
            "type": "string",
            "example": "approved"
          },
          "restriction_count": {
            "type": "integer",
            "example": 0
          },
          "status_reason": {
            "type": "string",
            "example": null
          },
          "status_updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "restriction_starts_at": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "restriction_ends_at": {
            "type": "string",
            "format": "date-time",
            "example": null
          },
          "restriction_duration_days": {
            "type": "integer",
            "example": null
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          }
        }
      },
      "BargainInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John's Bargain Store"
          },
          "username": {
            "type": "string",
            "example": "johnsstore"
          },
          "website": {
            "type": "string",
            "example": "https://johnsstore.com"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "contact@johnsstore.com"
          },
          "registration_number": {
            "type": "string",
            "example": "REG123456"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "whatsapp": {
            "type": "string",
            "example": "+1234567890"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, City, Country"
          },
          "status": {
            "type": "string",
            "example": "active"
          },
          "contract_start_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01"
          },
          "contract_end_date": {
            "type": "string",
            "format": "date",
            "example": "2026-01-01"
          }
        },
        "required": ["name", "username", "email", "registration_number"]
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "2022 Toyota Camry"
          },
          "year": {
            "type": "integer",
            "example": 2022
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "bargain_id": {
            "type": "integer",
            "example": 1
          },
          "make": {
            "type": "string",
            "example": "Toyota"
          },
          "body_type": {
            "type": "string",
            "example": "Sedan"
          },
          "car_condition": {
            "type": "string",
            "example": "Excellent"
          },
          "car_color": {
            "type": "string",
            "example": "White"
          },
          "car_documents": {
            "type": "string",
            "example": "Clean title"
          },
          "car_inside_color": {
            "type": "string",
            "example": "Black"
          },
          "VIN_number": {
            "type": "string",
            "example": "1234567890"
          },
          "location": {
            "type": "string",
            "example": "New York, NY"
          },
          "model": {
            "type": "string",
            "example": "Camry"
          },
          "transmission_type": {
            "type": "string",
            "example": "automatic"
          },
          "currency_type": {
            "type": "string",
            "example": "USD"
          },
          "regular_price": {
            "type": "number",
            "example": 25000
          },
          "description": {
            "type": "string",
            "example": "Well maintained family car"
          },
          "request_price_status": {
            "type": "boolean",
            "example": false
          },
          "request_price": {
            "type": "number",
            "example": null
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["video1.mp4"]
          },
          "is_for_sale": {
            "type": "boolean",
            "example": true
          },
          "is_for_rent": {
            "type": "boolean",
            "example": false
          },
          "is_promoted": {
            "type": "boolean",
            "example": true
          },
          "rent_price_per_day": {
            "type": "number",
            "example": null
          },
          "rent_price_per_month": {
            "type": "number",
            "example": null
          },
          "views": {
            "type": "integer",
            "example": 100
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          }
        }
      },
      "CarInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "2022 Toyota Camry"
          },
          "year": {
            "type": "integer",
            "example": 2022
          },
          "make": {
            "type": "string",
            "example": "Toyota"
          },
          "body_type": {
            "type": "string",
            "example": "Sedan"
          },
          "car_condition": {
            "type": "string",
            "example": "Excellent"
          },
          "car_color": {
            "type": "string",
            "example": "White"
          },
          "car_documents": {
            "type": "string",
            "example": "Clean title"
          },
          "car_inside_color": {
            "type": "string",
            "example": "Black"
          },
          "VIN_number": {
            "type": "string",
            "example": "1234567890"
          },
          "location": {
            "type": "string",
            "example": "New York, NY"
          },
          "model": {
            "type": "string",
            "example": "Camry"
          },
          "transmission_type": {
            "type": "string",
            "example": "automatic"
          },
          "currency_type": {
            "type": "string",
            "example": "USD"
          },
          "regular_price": {
            "type": "number",
            "example": 25000
          },
          "description": {
            "type": "string",
            "example": "Well maintained family car"
          },
          "request_price_status": {
            "type": "boolean",
            "example": false
          },
          "request_price": {
            "type": "number",
            "example": null
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["image1.jpg", "image2.jpg"]
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["video1.mp4"]
          },
          "is_for_sale": {
            "type": "boolean",
            "example": true
          },
          "is_for_rent": {
            "type": "boolean",
            "example": false
          },
          "is_promoted": {
            "type": "boolean",
            "example": true
          },
          "rent_price_per_day": {
            "type": "number",
            "example": null
          },
          "rent_price_per_month": {
            "type": "number",
            "example": null
          }
        },
        "required": ["title", "year", "make", "model", "transmission_type", "regular_price"]
      },
      "Offer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Smith"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "price": {
            "type": "number",
            "example": 25000
          },
          "car_id": {
            "type": "integer",
            "example": 1
          },
          "remark": {
            "type": "string",
            "example": "Interested in this car"
          },
          "user_id": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          }
        }
      },
      "Auction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "car_id": {
            "type": "integer",
            "example": 1
          },
          "starting_price": {
            "type": "number",
            "example": 20000
          },
          "auction_type": {
            "type": "string",
            "example": "fixed"
          },
          "duration_days": {
            "type": "integer",
            "example": 7
          },
          "end_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-12-31T23:59:59Z"
          },
          "status": {
            "type": "string",
            "example": "active"
          },
          "message": {
            "type": "string",
            "example": "Special auction for this car"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          }
        }
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "promotable_type": {
            "type": "string",
            "example": "App\\Models\\Car"
          },
          "promotable_id": {
            "type": "integer",
            "example": 1
          },
          "starts_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-01T00:00:00Z"
          },
          "ends_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-31T23:59:59Z"
          },
          "created_by": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-01T00:00:00Z"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Validation errors"
          },
          "errors": {
            "type": "object",
            "example": {
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Token"
      }
    }
  }
}